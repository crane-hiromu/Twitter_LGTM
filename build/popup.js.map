{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/popup.css?b447","webpack:///./src/popup.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAa;;AAEQ;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA,0BAA0B,OAAO;AACjC;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC","file":"popup.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/popup.js\");\n","// extracted by mini-css-extract-plugin","'use strict';\n\nimport './popup.css';\n\n(function() {\n  // We will make use of Storage API to get and store `count` value\n  // More information on Storage API can we found at\n  // https://developer.chrome.com/extensions/storage\n\n  // To get storage access, we have to mention it in `permissions` property of manifest.json file\n  // More information on Permissions can we found at\n  // https://developer.chrome.com/extensions/declare_permissions\n  const counterStorage = {\n    get: cb => {\n      chrome.storage.sync.get(['count'], result => {\n        cb(result.count);\n      });\n    },\n    set: (value, cb) => {\n      chrome.storage.sync.set(\n        {\n          count: value,\n        },\n        () => {\n          cb();\n        }\n      );\n    },\n  };\n\n  function setupCounter(initialValue = 0) {\n    document.getElementById('counter').innerHTML = initialValue;\n\n    document.getElementById('incrementBtn').addEventListener('click', () => {\n      updateCounter({\n        type: 'INCREMENT',\n      });\n    });\n\n    document.getElementById('decrementBtn').addEventListener('click', () => {\n      updateCounter({\n        type: 'DECREMENT',\n      });\n    });\n  }\n\n  function updateCounter({ type }) {\n    counterStorage.get(count => {\n      let newCount;\n\n      if (type === 'INCREMENT') {\n        newCount = count + 1;\n      } else if (type === 'DECREMENT') {\n        newCount = count - 1;\n      } else {\n        newCount = count;\n      }\n\n      counterStorage.set(newCount, () => {\n        document.getElementById('counter').innerHTML = newCount;\n\n        // Communicate with content script of\n        // active tab by sending a message\n        chrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n          const tab = tabs[0];\n\n          chrome.tabs.sendMessage(\n            tab.id,\n            {\n              type: 'COUNT',\n              payload: {\n                count: newCount,\n              },\n            },\n            response => {\n              console.log('Current count value passed to contentScript file');\n            }\n          );\n        });\n      });\n    });\n  }\n\n  function restoreCounter() {\n    // Restore count value\n    counterStorage.get(count => {\n      if (typeof count === 'undefined') {\n        // Set counter value as 0\n        counterStorage.set(0, () => {\n          setupCounter(0);\n        });\n      } else {\n        setupCounter(count);\n      }\n    });\n  }\n\n  document.addEventListener('DOMContentLoaded', restoreCounter);\n\n  // Communicate with background file by sending a message\n  chrome.runtime.sendMessage(\n    {\n      type: 'GREETINGS',\n      payload: {\n        message: 'Hello, my name is Pop. I am from Popup.',\n      },\n    },\n    response => {\n      console.log(response.message);\n    }\n  );\n})();\n"],"sourceRoot":""}